#!/bin/bash

# Redundant stops to make sure services are not running
echo "Stopping network services (if running)..."
systemctl stop hostapd.service
systemctl stop dnsmasq.service
systemctl stop dhcpcd.service

#Make sure no {{ ap_adapter }} interface exists (this generates an error; we could probably use an if statement to check if it exists first)
echo "Removing {{ ap_adapter }} interface..."
iw {{ ap_adapter }} info && iw dev {{ ap_adapter }} del

#Add {{ ap_adapter }} interface (this is dependent on the wireless interface being called wlan0, which it may not be in Stretch)
echo "Adding {{ ap_adapter }} interface..."
iw dev {{ sta_adapter }} interface add {{ ap_adapter }} type __ap

#Modify iptables (these can probably be saved using iptables-persistent if desired)
echo "Editing IP tables..."
iptables -t nat -A POSTROUTING -s {{ ap_subnet }} ! -d {{ ap_subnet }} -j MASQUERADE

# Bring up {{ ap_adapter }} interface.
iw {{ ap_adapter }} info && sudo ifconfig {{ ap_adapter }} up

# Start hostapd. 10-second sleep avoids some race condition, apparently. It may not need to be that long. (?)
echo "Starting hostapd service..."
systemctl start hostapd.service
sleep 10

#Start dhcpcd. Again, a 10-second sleep
echo "Starting dhcpcd service..."
systemctl start dhcpcd.service
sleep 10

echo "Starting dnsmasq service..."
systemctl start dnsmasq.service
echo "wifistart DONE"
