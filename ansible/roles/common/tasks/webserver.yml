---
- name: Webserver | Copy configuration files
  ansible.builtin.copy:
    src: nginx/{{ item }}
    dest: /etc/nginx/sites-available/{{ item }}
  loop:
    - files.local
    - admin.local
    - elimupi.local
    - registration.local
  notify:
    - Restart Nginx

- name: Webserver | Enable websites
  ansible.builtin.file:
    src: /etc/nginx/sites-available/{{ item }}
    dest: /etc/nginx/sites-enabled/{{ item }}
    state: link
  loop:
    - files.local
    - admin.local
    - elimupi.local
    - registration.local
  notify:
    - Restart Nginx

- name: Webserver | Remove default config
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Webserver | Create log directory
  ansible.builtin.file:
    path: '{{ web_logdir }}'
    state: directory
    mode: '0755'

- name: Webserver | Enable services
  ansible.builtin.service:
    name: '{{ item }}'
    state: started
  loop:
    - nginx

- name: Webserver | Set PHP upload_max_filesize
  community.general.ini_file:
    path: '/etc/php/{{ php_version }}/cli/php.ini'
    section: PHP
    option: upload_max_filesize
    value: 2G

- name: Webserver | Set PHP FMP upload_max_filesize
  community.general.ini_file:
    path: '/etc/php/{{ php_version }}/fpm/php.ini'
    section: PHP
    option: upload_max_filesize
    value: 2G

- name: Webserver | Set PHP post_max_size
  community.general.ini_file:
    path: '/etc/php/{{ php_version }}/cli/php.ini'
    section: PHP
    option: post_max_size
    value: 2G

- name: Webserver | Set PHP FMP post_max_size
  community.general.ini_file:
    path: '/etc/php/{{ php_version }}/fpm/php.ini'
    section: PHP
    option: post_max_size
    value: 2G

- name: Webserver | Clean docroot
  ansible.builtin.file:
    state: absent
    path: '{{ docroot }}'

- name: Webserver | Checkout ElimuPi-Web-Interface
  ansible.builtin.git:
    repo: '{{ webinterface_repo }}'
    dest:  '{{ docroot }}'
    version: main
    accept_hostkey: yes
  notify:
    - Restart Nginx

# The ElimuP-Connect registration stuff should be placed in the git repo above
- name: Webserver | Checkout ElimuPi-Connect Webinterface
  ansible.builtin.copy:
    src: files/html/apiconnect
    dest: '{{ docroot }}'
    owner: '{{ httpd_owner }}'
    group: '{{ httpd_group }}'
  notify:
    - Restart Nginx
- name: Webserver | Set ownership docroot
  ansible.builtin.file:
    path: '{{ docroot }}'
    state: directory
    recurse: yes
    owner: '{{ httpd_owner }}'
    group: '{{ httpd_group }}'

- name:  Webserver | Create web scripts directory
  ansible.builtin.file:
    path: '{{ web_scriptdir }}'
    state: directory
    mode: '0755'

- name: Webserver | Copy ElimuPi-Web-Interface admin scripts
  ansible.builtin.copy:
    src: '{{ docroot }}/admin/scripts/{{ item }}'
    dest: '{{ web_scriptdir }}/{{ item }}'
    remote_src: yes
    owner: root
    group: root
    mode: 0755
  loop:
    - addstudent.sh
    - addteacher.sh
    - changepassword.sh
    - deleteuser.sh
    - restoreAccounts.sh

- name: Webserver | Set server_names_hash_bucket_size
  ansible.builtin.lineinfile:
    path: /etc/nginx/nginx.conf
    regex: '^\s*#? *server_names_hash_bucket_size 64;'
    line: server_names_hash_bucket_size 64;

- name: Webserver | Set sudo file 020_elimupi
  ansible.builtin.copy:
    src: sudoers.d/020_elimupi
    dest: /etc/sudoers.d/020_elimupi
